name: package_test

on:
  workflow_dispatch:

  push:
    branches:
      - dev

jobs:
  # Cache and Install Dependencies
  cache_and_install:
    runs-on: ubuntu-latest
    outputs:
      cache_hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache Flutter
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-cache-${{ hashFiles('.flutter-version') }}
          restore-keys: |
            ${{ runner.os }}-flutter-cache-
      - name: Install Flutter
        if: steps.cache.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.2"
      - name: Cache Java
        uses: actions/cache@v3
        with:
          path: ~/Library/Android/sdk
          key: ${{ runner.os }}-java-cache-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-java-cache-
      - name: Install Java (if not cached)
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-java@v3
        with:
          java-version: "17"
      - run: echo "Cache hit: ${{ steps.cache.outputs.cache-hit }}"

  # Test Package
  test:
    runs-on: ubuntu-latest
    needs: cache_and_install
    steps:
      - uses: actions/checkout@v2
      - run: flutter pub get
      - run: flutter analyze .

  # Bump Version
  bump_version:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - run: flutter pub get
      - name: Get current version
        run: |
          current_version=$(cat pubspec.yaml | grep version | sed 's/version: //')
          echo "Current version: $current_version"
      - name: Increment version
        run: |
          new_version=$(echo "$current_version" | awk -F. '{printf "%d.%d.%d\n", $1,$2,$3+1}')
          echo "New version: $new_version"
      - name: Update pubspec.yaml
        run: |
          sed -i "s/version: $current_version/version: $new_version/" pubspec.yaml
      - run: git add pubspec.yaml && git commit -m "Bump version to $new_version"
      - name: Create tag (optional)
        run: git tag "v$new_version"

  # Publish Package
  publish_package:
    runs-on: ubuntu-latest
    needs: bump_version
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - run: flutter pub get
      - run: dart run build_runner build
      - name: Update file name
        run: |
          mv build/outputs/package/my_package-0.0.1.tar.gz "build/outputs/package/rq_network-${npm_version}.tar.gz"
          # Replace "npm_version" with the actual version obtained from npm
      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUBTOKEN }}
          file: "build/outputs/package/rq_network-${npm_version}.tar.gz"
          tag: v[version]
          prerelease: false
          overwrite: true
